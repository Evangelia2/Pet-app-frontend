pipeline {
    agent any

    environment {
        ANSIBLE_INVENTORY = '/var/lib/jenkins/inventory.ini'
        ANSIBLE_PLAYBOOK = '/var/lib/jenkins/ansible-compose.yml'
        DOCKER_PREFIX = 'petapp'
    }

    stages {

        stage('Checkout SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/<username>/Pet-app-frontend.git'
            }
        }

        stage('Run Ansible Deployment') {
            steps {
                sh """
                    echo "Running Ansible playbook..."
                    ansible-playbook -i $ANSIBLE_INVENTORY $ANSIBLE_PLAYBOOK
                """
            }
        }

        stage('Test Backend') {
            steps {
                sh """
                    echo "Running backend tests..."
                    ./mvnw test
                """
            }
        }

        stage('Docker Build (Optional)') {
            steps {
                sh """
                    echo "Building Docker images..."
                    docker build -t $DOCKER_PREFIX-backend ./backend
                    docker build -t $DOCKER_PREFIX-frontend ./frontend
                """
            }
        }

        stage('Docker Push (Optional)') {
            steps {
                sh """
                    echo "Pushing Docker images..."
                    docker tag $DOCKER_PREFIX-backend <dockerhub_username>/$DOCKER_PREFIX-backend:latest
                    docker tag $DOCKER_PREFIX-frontend <dockerhub_username>/$DOCKER_PREFIX-frontend:latest
                    docker push <dockerhub_username>/$DOCKER_PREFIX-backend:latest
                    docker push <dockerhub_username>/$DOCKER_PREFIX-frontend:latest
                """
            }
        }

    }

    post {
        always {
            echo "Pipeline finished with status: ${currentBuild.currentResult}"
        }
    }
}
